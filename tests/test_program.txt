;===============================================
; Test Name: Comprehensive ISA Feature Test
; Description: Tests all major ISA features including:
;   - Register operations (MOV)
;   - Memory operations (LOAD)
;   - Arithmetic (ADD, SUB, INC, DEC)
;   - Logical (NOT)
;   - Control flow (JMP, JZ, JNZ)
;   - Cache behavior
;
; Expected Results:
;   - Final register values:
;     * eax = 0 (counted down from 10)
;     * ebx = 6 (incremented then decremented)
;     * ecx = 12 (loop counter)
;     * edx = 42 (from memory)
;     * esi = 123 (from memory)
;     * edi = 255 (from memory)
;   - Cache performance:
;     * Should show hits for repeated memory access
;     * Should demonstrate L1/L2 interaction
;===============================================

; Initialize registers
MOV eax #10    ; eax = 10
MOV ebx #5     ; ebx = 5
MOV ecx #0     ; ecx = 0 (counter)

; Store some values in memory
MOV [100] #42  ; Memory[100] = 42
MOV [104] #123 ; Memory[104] = 123
MOV [108] #255 ; Memory[108] = 255

; Load values from memory to demonstrate cache
LOAD edx [100] ; edx = 42
LOAD esi [104] ; esi = 123
LOAD edi [108] ; edi = 255

; Arithmetic operations
ADD eax ebx    ; eax = eax + ebx (10 + 5 = 15)
SUB eax #3     ; eax = eax - 3 (15 - 3 = 12)

; Test INC and DEC instructions
INC ebx        ; ebx = 6
INC ebx        ; ebx = 7
DEC ebx        ; ebx = 6

; Test NOT instruction
NOT ecx        ; ecx = -1 (all bits inverted)

; Loop to demonstrate jumps
loop_start:
    ADD ecx #1     ; Increment counter
    SUB eax #1     ; Decrement eax
    JNZ loop_start ; Jump if eax != 0

; Final state check
JZ done        ; If eax == 0, we're done
JMP error      ; Otherwise, something went wrong

done:
HALT

error:
MOV eax #0     ; Set error code
HALT
