;===============================================
; ISA Instructions Reference
; This file documents all instructions currently supported by our ISA
;===============================================

; Memory Operations
;------------------
MOV   ; Move data between registers, memory, and immediate values
      ; Examples:
      ;   MOV eax #42     ; eax = 42
      ;   MOV [100] #42   ; Memory[100] = 42
      ;   MOV eax ebx     ; eax = ebx

LOAD  ; Load value from memory into register
      ; Examples:
      ;   LOAD eax [100]  ; eax = Memory[100]

; Arithmetic Operations
;---------------------
ADD   ; Add two values
      ; Examples:
      ;   ADD eax ebx     ; eax = eax + ebx
      ;   ADD eax #42     ; eax = eax + 42

SUB   ; Subtract second value from first
      ; Examples:
      ;   SUB eax ebx     ; eax = eax - ebx
      ;   SUB eax #42     ; eax = eax - 42

INC   ; Increment register by 1
      ; Examples:
      ;   INC eax         ; eax = eax + 1

DEC   ; Decrement register by 1
      ; Examples:
      ;   DEC eax         ; eax = eax - 1

; Logical Operations
;------------------
NOT   ; Bitwise NOT (invert all bits)
      ; Examples:
      ;   NOT eax         ; eax = ~eax (invert all bits)

AND   ; Bitwise AND between two values
      ; Examples:
      ;   AND eax ebx     ; eax = eax & ebx (bitwise AND)
      ;   AND eax #15     ; eax = eax & 15

OR    ; Bitwise OR between two values
      ; Examples:
      ;   OR eax ebx      ; eax = eax | ebx (bitwise OR)
      ;   OR eax #15      ; eax = eax | 15

XOR   ; Bitwise XOR (exclusive OR) between two values
      ; Examples:
      ;   XOR eax ebx     ; eax = eax ^ ebx (bitwise XOR)
      ;   XOR eax #15     ; eax = eax ^ 15

SHL   ; Shift left (multiply by power of 2)
      ; Examples:
      ;   SHL eax #2      ; eax = eax << 2 (multiply by 4)
      ;   SHL [100] #1    ; Memory[100] = Memory[100] << 1

SHR   ; Shift right (divide by power of 2)
      ; Examples:
      ;   SHR eax #2      ; eax = eax >> 2 (divide by 4)
      ;   SHR [100] #1    ; Memory[100] = Memory[100] >> 1

; Control Flow
;------------
JMP   ; Unconditional jump to label
      ; Examples:
      ;   JMP label       ; Jump to label

JZ    ; Jump if zero (if last result was 0)
      ; Examples:
      ;   JZ label        ; Jump to label if zero

JNZ   ; Jump if not zero (if last result was not 0)
      ; Examples:
      ;   JNZ label       ; Jump to label if not zero

; Program Control
;---------------
HALT  ; Stop program execution
      ; Examples:
      ;   HALT            ; End program
